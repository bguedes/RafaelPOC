g.V().as('  cypher.path.start.GENERATED1').hasLabel('person').has('id', eq(personId)).emit(__.loops().is(gte(minPathDistance))).repeat(__.bothE('knows').dedup().by(__.path()).as('  UNNAMED26').otherV()).times(maxPathDistance).simplePath().from('  cypher.path.start.GENERATED1').as('person').hasLabel('person').optional(__.select(all, '  UNNAMED26').as('  UNNAMED26')).select('person').project('person').by(__.identity()).dedup().select('person').as('person').is(neq('  cypher.null')).outE('isLocatedIn').inV().hasLabel('place').has('label', eq('City')).outE('isPartOf').inV().hasLabel('place').has('label', eq('Country')).has('name', eq(country)).select('person').is(neq('  cypher.null')).inE('hasCreator').outV().as('message').hasLabel('post', 'comment').outE('hasTag').inV().hasLabel('tag').outE('hasType').inV().hasLabel('tagClass').has('name', eq(tagClass)).select('message').is(neq('  cypher.null')).outE('hasTag').inV().as('tag').hasLabel('tag').select('person', 'tag', 'message').group().by(__.project('person.id', 'tag.name').by(__.select('person').choose(neq('  cypher.null'), __.choose(__.values('id'), __.values('id'), __.constant('  cypher.null')))).by(__.select('tag').choose(neq('  cypher.null'), __.choose(__.values('name'), __.values('name'), __.constant('  cypher.null'))))).by(__.fold().project('person.id', 'tag.name', 'messageCount').by(__.unfold().select('person').choose(neq('  cypher.null'), __.choose(__.values('id'), __.values('id'), __.constant('  cypher.null')))).by(__.unfold().select('tag').choose(neq('  cypher.null'), __.choose(__.values('name'), __.values('name'), __.constant('  cypher.null')))).by(__.unfold().select('message').dedup().is(neq('  cypher.null')).count())).unfold().select(values).order().by(__.select('messageCount'), desc).by(__.select('tag.name'), asc).by(__.select('person.id'), asc).limit(100)